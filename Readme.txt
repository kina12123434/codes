data
	本研究で使用したデータ

main_recom
	推薦システム用のmain関数プログラム

src
	関数ファイル

Makefile
	プログラムコンパイル用のmakefile
	
	
	
コンパイル方法はMakefileを参照．
事前にこのディレクトリに.oフォルダを，2つ上の階層にRESULTフォルダを作成しておく必要がある．(下記のコマンドで作成可能)
mkdir .o
mkdir ../../RESULT


作成した実行ファイルを実行する際，コマンドライン引数が必要となる．コマンドライン引数無しで実行すると入力形式を表示して終了する．
どの手法のコードにおいても欠損パターン数の開始値と終了値を指定でき，これを利用して後から追加で欠損パターンを増やして実験ができる．
    例) 欠損パターン1から5まで実験した後に，パターン6から10までを追加で実験．
これを正しく行うためにはRESULTフォルダの結果ファイルが決まった形式通りである必要がある．詳しくはRESULTフォルダのReadmeを参照．
また，既に実験済みの欠損パターンでもう1度実験する際は，前の実験結果を削除or移動する必要がある．これを忘れると前の実験結果ファイルに新たに実験結果が追加されてファイル構造が正しくなくなり，精度指標値が正しく出ない，先述した欠損パターン追加の実験が正しくできないといった不具合が出る恐れがある．



新しくデータセットを用いる場合は以下の作業が必要．(他のデータセットに倣う形で良い)
・dataフォルダ直下に次の形式に沿った名前でスパースデータのファイルを置く．
    sparse_データ名_ユーザ数_アイテム数.txt
・src/recom.hに欠損数の設定を書く．マクロ定数の名前は任意で，ここで書いたものをmakeでのコンパイル時にdataで指定する．
    KESSON          : 終端欠損数
    KESSON_BEGIN    : 初期欠損数
    KIZAMI          : 欠損数の変化の間隔
・src/recom.cxxの関数内にデータセットの情報を書く．マクロ定数の名前はrecom.hと一致させる．
    return_user_number()    : ユーザ数
    return_item_number()    : アイテム数
    return_threshold()      : 推薦のしきい値
    return_max_value()      : 最大評価値
    return_median()         : 評価の中間値
    return_data_name()      : データセットのtxtファイルに書いたデータ名

    
    
なお，クラスタリング+MF関連のコード(recom.cxxの一部とmain関数ファイル)についてはデバッグが最後まで終わっていない．

